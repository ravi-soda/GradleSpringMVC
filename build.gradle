/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.3/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse-wtp'
apply plugin: 'jetty'

// In this section you declare where to find the dependencies of your project
repositories {
    mavenCentral()
}

sourceCompatibility=1.8
targetCompatibility=1.8

dependencies {
    // The production code uses Guava
	//compile('ch.qos.logback:logback-classic:1.1.3') {
  	//	exclude group: 'org.slf4j', module: 'slf4j-api' //by both name and group
 	//}
 	//compile(
 	//	[group: 'org.slf4j', name: 'jcl-over-slf4j', version: '1.6.2'],
    //	[group: 'ch.qos.logback', name: 'logback-core', version: '1.1.3']
    //)
	compile 'com.google.guava:guava:20.0'
	compile 'org.springframework:spring-webmvc:4.3.2.RELEASE'
	compile 'javax.servlet:javax.servlet-api:3.0.1'
	compile 'javax.servlet:jstl:1.2'

    // Use JUnit test framework
    testCompile 'junit:junit:4.12'
}

jettyRun {
	contextPath="GradleSpringMVC"
	httpPort = 7001
}

jettyRunWar {
	contextPath="GradleSpringMVC"
	httpPort = 7001
}

// For eclipse IDE only
eclipse {
	wtp{
		component{
			// define context path specific to project foler name
			contextPath="GradleSpringMVC"
		}
	}

}